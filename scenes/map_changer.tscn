[gd_scene load_steps=6 format=3 uid="uid://cpi7uutdvh4o2"]

[sub_resource type="GDScript" id="GDScript_bsfnq"]
script/source = "extends Node
class_name MapChanger

#@onready var black: ColorRect = $CanvasLayer/BlackFill
#@onready var anim_player : AnimationPlayer = $CanvasLayer/AnimationPlayer

#static  var _initalized: bool = false
#static var _is_transitioning: bool = false

#static var map_path: String
#static var is_in_map: bool = false

#static var all_map_names: Array[String] = MapChanger._get_map_names()

#const CHARACTER_SCENE: PackedScene = preload(\"res://scenes/character.tscn\")

#static func _get_map_path(level_name: String) -> String:
	#return \"%s/%s.tscn\" % [MAPS_DIR, level_name]

#static func _get_map_names() -> Array[String]:
	#var dir = DirAccess.open(MAPS_DIR)
	#var directories: PackedStringArray = dir.get_files()
	#var maps: Array[String] = []
	#maps.resize(directories.size())
	#for i: int in directories.size():
		#maps[i] = directories[i].trim_suffix(\".tscn\")
	#return maps

func _ready() -> void:
	set_process(false)
	# If game is started with edited/custom scene.
	#var node_name: String = get_tree().current_scene.name
	#for map_name: String in all_map_names:
		#if node_name == map_name:
			#initalize_map()
		
#func _process(_delta: float) -> void:
	#if not _initalized and get_tree().current_scene != null:
		#initalize_map()
			
#func initalize_map() -> void:
	#var character: Node3D = CHARACTER_SCENE.instantiate()
	#is_in_map = true
	#get_tree().current_scene.add_child(character)
	#set_process(false)
			
#func change_map(map_name: String) -> void:
	#if map_name.is_empty(): printerr(\"Empty map_name\"); return
	#if _is_transitioning: return
	#
	#is_in_map = false
	#map_path = MapChanger._get_map_path(map_name)
	#var status: Error = ResourceLoader.load_threaded_request(map_path, \"PackedScene\", true)
#
	#if status == OK:
		#_is_transitioning = true
		#anim_player.play(\"fade_out\")
		#await anim_player.animation_finished
		#get_tree().change_scene_to_file(map_path)
		#anim_player.play(\"fade_in\")
		#_is_transitioning = false
		#set_process(true)
	#else:
		#printerr(\"Error changing scene. \\n\" + error_string(status))
"

[sub_resource type="Animation" id="Animation_kk0kn"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("BlackFill:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(0, 0, 0, 0)]
}

[sub_resource type="Animation" id="Animation_11j0m"]
resource_name = "fade_in"
length = 0.333335
step = 0.0333333
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("BlackFill:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.333333),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(0, 0, 0, 1), Color(0, 0, 0, 0)]
}

[sub_resource type="Animation" id="Animation_fipdn"]
resource_name = "fade_out"
length = 0.333335
step = 0.0333333
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("BlackFill:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.333333),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(0, 0, 0, 0), Color(0, 0, 0, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_wiu4w"]
_data = {
"RESET": SubResource("Animation_kk0kn"),
"fade_in": SubResource("Animation_11j0m"),
"fade_out": SubResource("Animation_fipdn")
}

[node name="map_changer" type="Node"]
script = SubResource("GDScript_bsfnq")

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="BlackFill" type="ColorRect" parent="CanvasLayer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 4
size_flags_vertical = 4
color = Color(0, 0, 0, 0)

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasLayer"]
libraries = {
"": SubResource("AnimationLibrary_wiu4w")
}
